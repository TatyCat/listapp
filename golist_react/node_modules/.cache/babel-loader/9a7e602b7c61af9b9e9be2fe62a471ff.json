{"ast":null,"code":"import _classCallCheck from \"/Users/luckytaty/Documents/sdg/u3/listapp/golist_react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/luckytaty/Documents/sdg/u3/listapp/golist_react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/luckytaty/Documents/sdg/u3/listapp/golist_react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/luckytaty/Documents/sdg/u3/listapp/golist_react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/luckytaty/Documents/sdg/u3/listapp/golist_react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/luckytaty/Documents/sdg/u3/listapp/golist_react/src/components/ToDoList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport AddItemForm from './AddItemForm';\nimport ListItem from './ListItem';\n\nvar ToDoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ToDoList, _Component);\n\n  function ToDoList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ToDoList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ToDoList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      newTaskItem: '',\n      todoList: [],\n      accessToken: 'xiii'\n    };\n\n    _this.getApiUrl = function () {\n      return \"http://localhost:3000/lists?access_token=#{this.state.accessToken}\";\n    };\n\n    _this.updateStateWithNewItem = function (event) {\n      _this.setState({\n        newTaskItem: event.target.value\n      });\n    };\n\n    _this.getListFromAPI = function () {\n      // go to the API\n      axios.get(_this.getApiUrl()).then(function (resp) {\n        // populate state with the todo list\n        _this.setState({\n          todoList: resp.data\n        });\n\n        console.log(_this.state.todoList);\n      });\n    };\n\n    _this.deleteItem = function (task) {\n      console.log(task);\n      var url = \"http://localhost:3000/lists/\".concat(task, \"?access_token = \").concat(_this.state.accessToken, \" \");\n      console.log(url); // axios.delete(url).then(resp => {\n      // this.getListFromAPI()\n      // })\n    };\n\n    _this.addItemToApi = function (event) {\n      event.preventDefault();\n      axios.post(_this.getApiUrl(), {\n        task: {\n          text: _this.state.newTaskItem\n        }\n      }).then(function (resp) {\n        // get lateset list form API\n        _this.getListFromAPI(); // update state to clear out the input field\n\n\n        _this.setState({\n          newTaskItem: ''\n        });\n      });\n    };\n\n    _this.generateRandomToken = function () {\n      // creat a new string that is 20 random characters long\n      return Math.floor(Math.random() * Math.pow(10, 20)).toString();\n    };\n\n    _this.resetList = function () {\n      // reset the state\n      // reset toDoList\n      // reset the newTaskItem\n      // create new token\n      _this.setState({\n        todoList: [],\n        newTaskItem: '',\n        accessToken: _this.generateRandomToken()\n      }, function () {\n        console.log(_this.state.accessToken);\n\n        _this.getListFromAPI(); // store the new token in localstorage\n\n\n        localStorage.setItem('list-access-token', _this.state.accessToken);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ToDoList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getListFromAPI(); // check local storage for a token\n\n      var token = localStorage.getItem('list-access-token');\n\n      if (token) {\n        this.setState({\n          accessToken: token\n        }, function () {\n          _this2.getListFromAPI();\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(AddItemForm, {\n        addItemToApi: this.addItemToApi,\n        newTaskItem: this.state.newTaskItem,\n        updateStateWithNewItem: this.updateStateWithNewItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"output\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        className: \"todo-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.state.todoList.map(function (task_item) {\n        {\n          console.log();\n        }\n        return React.createElement(ListItem, {\n          key: task_item.id,\n          id: task_item.id,\n          task: task_item.task // deletetask={this.deletetask()}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        });\n      })), React.createElement(\"button\", {\n        className: \"reset-button\",\n        onClick: this.resetList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"RESET LIST\"));\n    }\n  }]);\n\n  return ToDoList;\n}(Component); // deleteItem = task => {\n//   console.log(task)\n//   const url = `http://localhost:3000/lists/${task}?access_token = ${this.state.accessToken} `\n//   console.log(url)\n//   // axios.delete(url).then(resp => {\n//   // this.getListFromAPI()\n//   // })\n// }\n\n\nexport default ToDoList;","map":{"version":3,"sources":["/Users/luckytaty/Documents/sdg/u3/listapp/golist_react/src/components/ToDoList.js"],"names":["React","Component","axios","AddItemForm","ListItem","ToDoList","state","newTaskItem","todoList","accessToken","getApiUrl","updateStateWithNewItem","event","setState","target","value","getListFromAPI","get","then","resp","data","console","log","deleteItem","task","url","addItemToApi","preventDefault","post","text","generateRandomToken","Math","floor","random","pow","toString","resetList","localStorage","setItem","token","getItem","map","task_item","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport AddItemForm from './AddItemForm'\nimport ListItem from './ListItem'\n\nclass ToDoList extends Component {\n  state = {\n    newTaskItem: '',\n    todoList: [],\n    accessToken: 'xiii'\n  }\n\n  getApiUrl = () => {\n    return `http://localhost:3000/lists?access_token=#{this.state.accessToken}`\n  }\n\n  updateStateWithNewItem = event => {\n    this.setState({\n      newTaskItem: event.target.value\n    })\n  }\n\n  componentDidMount() {\n    this.getListFromAPI()\n    // check local storage for a token\n    const token = localStorage.getItem('list-access-token')\n    if (token) {\n      this.setState(\n        {\n          accessToken: token\n        },\n        () => {\n          this.getListFromAPI()\n        }\n      )\n    }\n  }\n\n  getListFromAPI = () => {\n    // go to the API\n    axios.get(this.getApiUrl())\n      .then(resp => {\n        // populate state with the todo list\n        this.setState({\n          todoList: resp.data\n        })\n        console.log(this.state.todoList)\n      })\n  }\n\n  // localhost:3000/lists/7?access_token=xiii\n  deleteItem = task => {\n    console.log(task)\n    const url = `http://localhost:3000/lists/${task}?access_token = ${this.state.accessToken} `\n    console.log(url)\n    // axios.delete(url).then(resp => {\n    // this.getListFromAPI()\n    // })\n  }\n\n  addItemToApi = event => {\n    event.preventDefault()\n    axios\n      .post(this.getApiUrl(), {\n        task: {\n          text: this.state.newTaskItem\n        }\n      })\n      .then(resp => {\n        // get lateset list form API\n        this.getListFromAPI()\n        // update state to clear out the input field\n        this.setState({\n          newTaskItem: ''\n        })\n      })\n  }\n\n  generateRandomToken = () => {\n    // creat a new string that is 20 random characters long\n    return Math.floor(Math.random() * Math.pow(10, 20)).toString()\n  }\n\n  resetList = () => {\n    // reset the state\n    // reset toDoList\n    // reset the newTaskItem\n    // create new token\n    this.setState(\n      {\n        todoList: [],\n        newTaskItem: '',\n        accessToken: this.generateRandomToken()\n      },\n      () => {\n        console.log(this.state.accessToken)\n        this.getListFromAPI()\n        // store the new token in localstorage\n        localStorage.setItem('list-access-token', this.state.accessToken)\n      }\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <AddItemForm\n          addItemToApi={this.addItemToApi}\n          newTaskItem={this.state.newTaskItem}\n          updateStateWithNewItem={this.updateStateWithNewItem}\n        />\n        <p className=\"output\" />\n        <ol className=\"todo-list\">\n          {this.state.todoList.map(task_item => {\n            { console.log() }\n            return (\n              <ListItem\n                key={task_item.id}\n                id={task_item.id}\n                task={task_item.task}\n              // deletetask={this.deletetask()}\n              />\n            )\n          })}\n        </ol>\n\n        <button className=\"reset-button\" onClick={this.resetList}>RESET LIST</button>\n      </>\n    )\n  }\n}\n// deleteItem = task => {\n//   console.log(task)\n//   const url = `http://localhost:3000/lists/${task}?access_token = ${this.state.accessToken} `\n//   console.log(url)\n//   // axios.delete(url).then(resp => {\n//   // this.getListFromAPI()\n//   // })\n// }\n\nexport default ToDoList\n"]},"metadata":{},"sourceType":"module"}