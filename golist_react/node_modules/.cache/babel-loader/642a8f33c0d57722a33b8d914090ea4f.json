{"ast":null,"code":"import _classCallCheck from \"/Users/luckytaty/Documents/sdg/u3/listapp/golist_react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/luckytaty/Documents/sdg/u3/listapp/golist_react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/luckytaty/Documents/sdg/u3/listapp/golist_react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/luckytaty/Documents/sdg/u3/listapp/golist_react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/luckytaty/Documents/sdg/u3/listapp/golist_react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/luckytaty/Documents/sdg/u3/listapp/golist_react/src/components/ToDoList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport AddItemForm from './AddItemForm';\nimport ListItem from './ListItem';\n\nvar ToDoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ToDoList, _Component);\n\n  function ToDoList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ToDoList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ToDoList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      newTaskItem: '',\n      todoList: [],\n      accessToken: null\n    };\n\n    _this.getApiUrl = function () {\n      return \"http://localhost:3000/lists?access_token=#{this.state.accessToken}\";\n    };\n\n    _this.updateStateWithNewItem = function (event) {\n      _this.setState({\n        newTaskItem: event.target.value\n      });\n    };\n\n    _this.getListFromAPI = function () {\n      // go to the API\n      axios.get(_this.getApiUrl()).then(function (resp) {\n        // populate state with the todo list\n        _this.setState({\n          todoList: resp.data\n        }); // console.log(this.state.todoList)\n\n      });\n    };\n\n    _this.deleteItem = function (task) {\n      var url = \"http://localhost:3000/lists/\".concat(task, \"?access_token = \").concat(_this.state.accessToken, \" \");\n      console.log(url);\n      axios.delete(url).then(function (resp) {\n        _this.getListFromAPI();\n      });\n    };\n\n    _this.addItemToApi = function (event) {\n      event.preventDefault();\n      axios.post(_this.getApiUrl(), {\n        \"list\": {\n          \"task\": _this.state.newTaskItem,\n          \"complete\": false,\n          \"token\": _this.state.accessToken\n        }\n      }).then(function (resp) {\n        // update state to clear out the input field\n        _this.setState({\n          newTaskItem: ''\n        }); // ***Gavin: Why did I have to add line 76 to clear the input box? Line 74 doens't clear out the input box like it's suppposed to. \n\n\n        document.getElementById(\"newItem\").value = \"\"; // get lateset list form API\n\n        _this.getListFromAPI();\n      });\n    };\n\n    _this.generateRandomToken = function () {\n      // creat a new string that is 20 random characters long\n      return Math.floor(Math.random() * Math.pow(10, 20)).toString();\n    };\n\n    _this.markComplete = function (id) {\n      axios.post(_this.getApiUrl(), {\n        \"list\": {\n          \"task\": _this.state.newTaskItem,\n          \"complete\": false,\n          \"token\": _this.state.accessToken\n        }\n      }).then(function (resp) {\n        // update state to clear out the input field\n        _this.setState({\n          newTaskItem: ''\n        }); // ***Gavin: Why did I have to add line 76 to clear the input box? Line 74 doens't clear out the input box like it's suppposed to. \n\n\n        document.getElementById(\"newItem\").value = \"\"; // get lateset list form API\n\n        _this.getListFromAPI();\n      });\n    };\n\n    _this.resetList = function () {\n      // reset the state\n      // reset toDoList\n      // reset the newTaskItem\n      // create new token\n      _this.setState({\n        todoList: [],\n        newTaskItem: '',\n        accessToken: _this.generateRandomToken()\n      }, function () {\n        console.log(_this.state.accessToken);\n\n        _this.getListFromAPI(); // store the new token in localstorage\n\n\n        localStorage.setItem('list-access-token', _this.state.accessToken);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ToDoList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getListFromAPI(); // check local storage for a token\n\n      var token = localStorage.getItem('list-access-token');\n\n      if (token) {\n        this.setState({\n          accessToken: token\n        }, function () {\n          _this2.getListFromAPI();\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(AddItemForm, {\n        addItemToApi: this.addItemToApi,\n        newTaskItem: this.state.newTaskItem,\n        updateStateWithNewItem: this.updateStateWithNewItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"output\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        className: \"todo-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.state.todoList.map(function (task_item) {\n        return React.createElement(ListItem, {\n          key: task_item.id,\n          id: task_item.id,\n          complete: task_item.complete,\n          task: task_item.task,\n          deleteItem: _this3.deleteItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        });\n      })), React.createElement(\"button\", {\n        className: \"reset-button\",\n        onClick: this.resetList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"RESET LIST\"));\n    }\n  }]);\n\n  return ToDoList;\n}(Component);\n\nexport default ToDoList;","map":{"version":3,"sources":["/Users/luckytaty/Documents/sdg/u3/listapp/golist_react/src/components/ToDoList.js"],"names":["React","Component","axios","AddItemForm","ListItem","ToDoList","state","newTaskItem","todoList","accessToken","getApiUrl","updateStateWithNewItem","event","setState","target","value","getListFromAPI","get","then","resp","data","deleteItem","task","url","console","log","delete","addItemToApi","preventDefault","post","document","getElementById","generateRandomToken","Math","floor","random","pow","toString","markComplete","id","resetList","localStorage","setItem","token","getItem","map","task_item","complete"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport AddItemForm from './AddItemForm'\nimport ListItem from './ListItem'\n\nclass ToDoList extends Component {\n  state = {\n    newTaskItem: '',\n    todoList: [],\n    accessToken: null\n  }\n\n  getApiUrl = () => {\n    return `http://localhost:3000/lists?access_token=#{this.state.accessToken}`\n  }\n\n  updateStateWithNewItem = event => {\n    this.setState({\n      newTaskItem: event.target.value\n    })\n  }\n\n  componentDidMount() {\n    this.getListFromAPI()\n    // check local storage for a token\n    const token = localStorage.getItem('list-access-token')\n    if (token) {\n      this.setState(\n        {\n          accessToken: token\n        },\n        () => {\n          this.getListFromAPI()\n        }\n      )\n    }\n  }\n\n  getListFromAPI = () => {\n    // go to the API\n    axios.get(this.getApiUrl())\n      .then(resp => {\n        // populate state with the todo list\n        this.setState({\n          todoList: resp.data\n        })\n        // console.log(this.state.todoList)\n      })\n  }\n\n  // localhost:3000/lists/7?access_token=xiii\n  deleteItem = task => {\n    const url = `http://localhost:3000/lists/${task}?access_token = ${this.state.accessToken} `\n    console.log(url)\n    axios.delete(url).then(resp => {\n      this.getListFromAPI()\n    })\n  }\n\n  addItemToApi = event => {\n    event.preventDefault()\n    axios\n      .post(this.getApiUrl(), {\n        \"list\": {\n          \"task\": this.state.newTaskItem,\n          \"complete\": false,\n          \"token\": this.state.accessToken\n        }\n      })\n      .then(resp => {\n        // update state to clear out the input field\n        this.setState({ newTaskItem: '' })\n        // ***Gavin: Why did I have to add line 76 to clear the input box? Line 74 doens't clear out the input box like it's suppposed to. \n        document.getElementById(\"newItem\").value = \"\";\n        // get lateset list form API\n        this.getListFromAPI()\n      })\n  }\n\n  generateRandomToken = () => {\n    // creat a new string that is 20 random characters long\n    return Math.floor(Math.random() * Math.pow(10, 20)).toString()\n  }\n\n  markComplete = (id) => {\n    axios\n      .post(this.getApiUrl(), {\n        \"list\": {\n          \"task\": this.state.newTaskItem,\n          \"complete\": false,\n          \"token\": this.state.accessToken\n        }\n      })\n      .then(resp => {\n        // update state to clear out the input field\n        this.setState({ newTaskItem: '' })\n        // ***Gavin: Why did I have to add line 76 to clear the input box? Line 74 doens't clear out the input box like it's suppposed to. \n        document.getElementById(\"newItem\").value = \"\";\n        // get lateset list form API\n        this.getListFromAPI()\n      })\n  }\n\n  resetList = () => {\n    // reset the state\n    // reset toDoList\n    // reset the newTaskItem\n    // create new token\n    this.setState(\n      {\n        todoList: [],\n        newTaskItem: '',\n        accessToken: this.generateRandomToken()\n      },\n      () => {\n        console.log(this.state.accessToken)\n        this.getListFromAPI()\n        // store the new token in localstorage\n        localStorage.setItem('list-access-token', this.state.accessToken)\n      }\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <AddItemForm\n          addItemToApi={this.addItemToApi}\n          newTaskItem={this.state.newTaskItem}\n          updateStateWithNewItem={this.updateStateWithNewItem}\n        />\n        <p className=\"output\" />\n        <ol className=\"todo-list\">\n          {this.state.todoList.map(task_item => {\n            return (\n              < ListItem\n                key={task_item.id}\n                id={task_item.id}\n                complete={task_item.complete}\n                task={task_item.task}\n                deleteItem={this.deleteItem}\n              />\n            )\n          })}\n        </ol>\n\n        <button className=\"reset-button\" onClick={this.resetList}>RESET LIST</button>\n      </>\n    )\n  }\n}\n\nexport default ToDoList\n"]},"metadata":{},"sourceType":"module"}